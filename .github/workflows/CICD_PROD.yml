name: CICD_PROD

on:
  push:
    branches: [main]

  workflow_dispatch:
    inputs:
      version:
        description: "Image Version"
        required: true

env:
  IMAGE_NAME: "dungeon-autogen-client"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Change directory
        run: cd client

      - name: Build container image
        run: docker build . -t ${{secrets.CONTAINER_URL}}/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA)

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Remove old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to Container Registry
        run: docker push ${{secrets.CONTAINER_URL}}/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to droplet via ssh
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME, GITHUB_SHA
          script: |
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            docker stop $(echo $IMAGE_NAME)
            docker rm $(echo $IMAGE_NAME)
            docker run -d -p 80:80 \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            ${{secrets.CONTAINER_URL}}/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA)
